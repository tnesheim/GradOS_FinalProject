<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\_build_serialization\ble_app_proximity_serialization.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\_build_serialization\ble_app_proximity_serialization.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Thu Mar 26 20:16:23 2015
<BR><P>
<H3>Maximum Stack Usage =        528 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; advertising_start &rArr; advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[71]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[71]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a><BR>
 <LI><a href="#[70]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[70]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a><BR>
 <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[4]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">SVC_Handler</a><BR>
 <LI><a href="#[6]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SysTick_Handler</a><BR>
 <LI><a href="#[15]">CCM_AAR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">CCM_AAR_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">ADC_IRQHandler</a> from main.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[15]">CCM_AAR_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[14]">ECB_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[c]">GPIOTE_IRQHandler</a> from app_gpiote_fast_detect.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[19]">LPCOMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[7]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[5]">PendSV_Handler</a> from ser_phy_nrf51_spi_master.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[18]">QDEC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[8]">RADIO_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[13]">RNG_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[11]">RTC0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[17]">RTC1_IRQHandler</a> from app_timer.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[a]">SPI0_TWI0_IRQHandler</a> from spi_master.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[b]">SPI1_TWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[4]">SVC_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1a]">SWI0_IRQHandler</a> from app_timer.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1b]">SWI1_IRQHandler</a> from app_gpiote_fast_detect.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1c]">SWI2_IRQHandler</a> from softdevice_handler.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1d]">SWI3_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1e]">SWI4_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1f]">SWI5_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[6]">SysTick_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[60]">SystemInit</a> from system_nrf51.o(.text) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[12]">TEMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e]">TIMER0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[f]">TIMER1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[10]">TIMER2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[9]">UART0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[16]">WDT_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[61]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[24]">adv_led_blink_timeout_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[22]">battery_level_meas_timeout_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[35]">ble_enable_params_t_enc</a> from ble_struct_serialization.o(.text) referenced from ble_enable.o(.text)
 <LI><a href="#[28]">ble_evt_dispatch</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[3a]">ble_gap_irk_dec</a> from ble_gap_struct_serialization.o(.text) referenced from ble_gap_struct_serialization.o(.text)
 <LI><a href="#[37]">ble_gatts_attr_enc</a> from ble_gatts_struct_serialization.o(.text) referenced 2 times from ble_gatts_characteristic_add.o(.text)
 <LI><a href="#[3c]">ble_gatts_attr_md_enc</a> from ble_gatts_struct_serialization.o(.text) referenced from ble_gatts_struct_serialization.o(.text)
 <LI><a href="#[38]">ble_gatts_char_handles_dec</a> from ble_gatts_struct_serialization.o(.text) referenced from ble_gatts_characteristic_add.o(.text)
 <LI><a href="#[36]">ble_gatts_char_md_enc</a> from ble_gatts_struct_serialization.o(.text) referenced from ble_gatts_characteristic_add.o(.text)
 <LI><a href="#[3d]">ble_uuid_t_enc</a> from ble_struct_serialization.o(.text) referenced from ble_gatts_struct_serialization.o(.text)
 <LI><a href="#[0]">button_event_handler</a> from main.o(.text) referenced 4 times from main.o(.data)
 <LI><a href="#[21]">conn_params_error_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[2e]">detection_delay_timeout_handler</a> from app_button.o(.text) referenced from app_button.o(.text)
 <LI><a href="#[2a]">device_manager_evt_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[32]">dm_pstorage_cb_handler</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.text)
 <LI><a href="#[3f]">enable_rsp_dec</a> from app_mw_ble.o(.text) referenced from app_mw_ble.o(.text)
 <LI><a href="#[46]">gap_adv_data_set_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[40]">gap_adv_start_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[42]">gap_appearance_get_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[44]">gap_appearance_set_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[47]">gap_conn_param_update_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[41]">gap_device_name_get_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[43]">gap_device_name_set_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[48]">gap_disconnect_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[4b]">gap_ppcp_get_reply_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[45]">gap_ppcp_set_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[49]">gap_sec_info_reply_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[4a]">gap_sec_params_reply_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[4c]">gap_tx_power_set_rsp_dec</a> from app_mw_ble_gap.o(.text) referenced from app_mw_ble_gap.o(.text)
 <LI><a href="#[4e]">gattc_characteristics_discover_rsp_dec</a> from app_mw_ble_gattc.o(.text) referenced from app_mw_ble_gattc.o(.text)
 <LI><a href="#[6c]">gattc_context_apply</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[68]">gattc_context_load</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[64]">gattc_context_store</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[4d]">gattc_primary_services_discover_rsp_dec</a> from app_mw_ble_gattc.o(.text) referenced from app_mw_ble_gattc.o(.text)
 <LI><a href="#[4f]">gattc_write_rsp_dec</a> from app_mw_ble_gattc.o(.text) referenced from app_mw_ble_gattc.o(.text)
 <LI><a href="#[53]">gatts_characteristic_add_rsp_dec</a> from app_mw_ble_gatts.o(.text) referenced from app_mw_ble_gatts.o(.text)
 <LI><a href="#[6b]">gatts_context_apply</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[67]">gatts_context_load</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[63]">gatts_context_store</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[54]">gatts_descriptor_add_rsp_dec</a> from app_mw_ble_gatts.o(.text) referenced from app_mw_ble_gatts.o(.text)
 <LI><a href="#[51]">gatts_hvx_rsp_dec</a> from app_mw_ble_gatts.o(.text) referenced from app_mw_ble_gatts.o(.text)
 <LI><a href="#[52]">gatts_service_add_rsp_dec</a> from app_mw_ble_gatts.o(.text) referenced from app_mw_ble_gatts.o(.text)
 <LI><a href="#[57]">gatts_sys_attr_get_rsp_dec</a> from app_mw_ble_gatts.o(.text) referenced from app_mw_ble_gatts.o(.text)
 <LI><a href="#[50]">gatts_sys_attr_set_rsp_dec</a> from app_mw_ble_gatts.o(.text) referenced from app_mw_ble_gatts.o(.text)
 <LI><a href="#[55]">gatts_value_get_rsp_dec</a> from app_mw_ble_gatts.o(.text) referenced from app_mw_ble_gatts.o(.text)
 <LI><a href="#[56]">gatts_value_set_rsp_dec</a> from app_mw_ble_gatts.o(.text) referenced from app_mw_ble_gatts.o(.text)
 <LI><a href="#[6d]">gattsc_context_apply</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[69]">gattsc_context_load</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[65]">gattsc_context_store</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[2d]">gpiote_event_handler</a> from app_button.o(.text) referenced from app_button.o(.text)
 <LI><a href="#[20]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[23]">mild_alert_timeout_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[6a]">no_service_context_apply</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[66]">no_service_context_load</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[62]">no_service_context_store</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[2c]">on_bas_evt</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[26]">on_ias_c_evt</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[25]">on_ias_evt</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[2b]">on_lls_evt</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[5b]">phy_events_handler</a> from ser_hal_transport.o(.text) referenced from ser_hal_transport.o(.text)
 <LI><a href="#[31]">pstorage_store</a> from pstorage.o(.text) referenced 2 times from device_manager_peripheral.o(.text)
 <LI><a href="#[30]">pstorage_update</a> from pstorage.o(.text) referenced 2 times from device_manager_peripheral.o(.text)
 <LI><a href="#[3b]">ser_ble_gatts_char_pf_enc</a> from ble_gatts_struct_serialization.o(.text) referenced from ble_gatts_struct_serialization.o(.text)
 <LI><a href="#[5c]">ser_phy_spi_master_event_handler</a> from ser_phy_nrf51_spi_master.o(.text) referenced from ser_phy_nrf51_spi_master.o(.text)
 <LI><a href="#[5f]">ser_phy_spi_master_irq_end</a> from ser_phy_nrf51_spi_master.o(.text) referenced from ser_phy_nrf51_spi_master.o(.text)
 <LI><a href="#[5e]">ser_phy_spi_master_ready</a> from ser_phy_nrf51_spi_master.o(.text) referenced from ser_phy_nrf51_spi_master.o(.text)
 <LI><a href="#[5d]">ser_phy_spi_master_request</a> from ser_phy_nrf51_spi_master.o(.text) referenced from ser_phy_nrf51_spi_master.o(.text)
 <LI><a href="#[58]">ser_sd_rsp_wait</a> from ser_softdevice_handler.o(.text) referenced from ser_softdevice_handler.o(.text)
 <LI><a href="#[5a]">ser_sd_transport_hal_handler</a> from ser_sd_transport.o(.text) referenced from ser_sd_transport.o(.text)
 <LI><a href="#[59]">ser_softdevice_evt_handler</a> from ser_softdevice_handler.o(.text) referenced from ser_softdevice_handler.o(.text)
 <LI><a href="#[27]">service_error_handler</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[2f]">softdevice_assertion_handler</a> from softdevice_handler.o(.text) referenced from softdevice_handler.o(.text)
 <LI><a href="#[33]">storage_operation_dummy_handler</a> from device_manager_peripheral.o(.text) referenced from device_manager_peripheral.o(.text)
 <LI><a href="#[29]">sys_evt_dispatch</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[39]">uint16_t_dec</a> from ble_serialization.o(.text) referenced 3 times from ble_gatts_hvx.o(.text)
 <LI><a href="#[34]">update_timeout_handler</a> from ble_conn_params.o(.text) referenced from ble_conn_params.o(.text)
 <LI><a href="#[3e]">uuid_encode_rsp_dec</a> from app_mw_ble.o(.text) referenced from app_mw_ble.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[61]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[1d1]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[6e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1d0]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1d2]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[1d3]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[1d4]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[1d5]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1d6]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[70]"></a>__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_timer.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
</UL>

<P><STRONG><a name="[71]"></a>__asm___11_nrf_delay_c_532987f3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nrf_delay.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>

<P><STRONG><a name="[72]"></a>app_error_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_handler_execute
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_uuid_encode
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_get
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_data_set
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_write
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_primary_services_discover
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_characteristics_discover
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_get
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_hvx
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_descriptor_add
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_tx_power_set
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_set
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_set
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_start
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_enable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lls_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_start
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_event_handler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_evt_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_error_handler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ias_c_evt
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_bas_evt
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_signal
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_blink_timeout_handler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mild_alert_timeout_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_led_blink_stop
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_blink_stop
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_error_handler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_get
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_conn_param_update
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_set
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_get
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_info_reply
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_tx_power_set_rsp_dec
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ppcp_get_reply_rsp_dec
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sec_params_reply_rsp_dec
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sec_info_reply_rsp_dec
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_rsp_dec
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_conn_param_update_rsp_dec
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_data_set_rsp_dec
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ppcp_set_rsp_dec
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_appearance_set_rsp_dec
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_name_set_rsp_dec
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_appearance_get_rsp_dec
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_name_get_rsp_dec
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_start_rsp_dec
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_rsp_dec
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_encode_rsp_dec
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_initial_bytes
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv_irq
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_buffer_init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_init_hw_instance
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_buffer_release
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_signal_evt
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_evt_handler_reg
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_raw_assert
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_events_handler
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_packet_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_evt_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_sys_attr_get_rsp_dec
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_value_set_rsp_dec
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_value_get_rsp_dec
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_descriptor_add_rsp_dec
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_characteristic_add_rsp_dec
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_service_add_rsp_dec
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_hvx_rsp_dec
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_sys_attr_set_rsp_dec
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_rsp_dec
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_characteristics_discover_rsp_dec
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_primary_services_discover_rsp_dec
</UL>

<P><STRONG><a name="[e2]"></a>assert_nrf_callback</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_assertion_handler
</UL>

<P><STRONG><a name="[d]"></a>ADC_IRQHandler</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ADC_IRQHandler &rArr; ble_bas_battery_level_update &rArr; sd_ble_gatts_value_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_battery_level_update
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_in_percent
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>main</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = main &rArr; advertising_start &rArr; advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_app_evt_wait
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[8d]"></a>ble_bas_on_ble_evt</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ble_bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_bas_on_ble_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[b2]"></a>ble_bas_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ble_bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ble_bas_init &rArr; battery_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
</UL>

<P><STRONG><a name="[75]"></a>ble_bas_battery_level_update</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, ble_bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_bas_battery_level_update &rArr; sd_ble_gatts_value_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_set
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_hvx
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[8b]"></a>ble_ias_on_ble_evt</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ble_ias.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_ias_on_ble_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[a5]"></a>ble_ias_init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ble_ias.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ble_ias_init &rArr; alert_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_level_char_add
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[a8]"></a>ble_ias_c_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ble_ias_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[8e]"></a>ble_ias_c_on_ble_evt</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, ble_ias_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ble_ias_c_on_ble_evt &rArr; sd_ble_gattc_primary_services_discover &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_primary_services_discover
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_characteristics_discover
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_char_disc_resp
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[90]"></a>ble_ias_c_send_alert_level</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, ble_ias_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_ias_c_send_alert_level &rArr; sd_ble_gattc_write &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_write
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_event_handler
</UL>

<P><STRONG><a name="[bf]"></a>ble_lls_alert_level_get</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ble_lls.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ble_lls_alert_level_get &rArr; sd_ble_gatts_value_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_get
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lls_on_ble_evt
</UL>

<P><STRONG><a name="[8c]"></a>ble_lls_on_ble_evt</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ble_lls.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_lls_on_ble_evt &rArr; ble_lls_alert_level_get &rArr; sd_ble_gatts_value_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lls_alert_level_get
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[b1]"></a>ble_lls_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ble_lls.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ble_lls_init &rArr; alert_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_level_char_add
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lls_init
</UL>

<P><STRONG><a name="[a4]"></a>ble_tps_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ble_tps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ble_tps_init &rArr; tx_power_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_power_level_char_add
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[7b]"></a>ble_advdata_set</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_data_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
</UL>

<P><STRONG><a name="[17]"></a>RTC1_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC1_IRQHandler &rArr; timer_timeouts_check
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SWI0_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 48 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SWI0_IRQHandler &rArr; list_deletions_handler &rArr; timer_list_remove &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expired_timers_handler
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elapsed_ticks_acquire
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>app_timer_init</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_timer_init &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_init
</UL>

<P><STRONG><a name="[9f]"></a>app_timer_create</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_init
</UL>

<P><STRONG><a name="[80]"></a>app_timer_start</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_bas_evt
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_signal
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_blink_timeout_handler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mild_alert_timeout_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>

<P><STRONG><a name="[77]"></a>app_timer_stop</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_disable
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_bas_evt
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_led_blink_stop
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_blink_stop
</UL>

<P><STRONG><a name="[93]"></a>app_button_init</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = app_button_init &rArr; app_gpiote_user_register &rArr; pins_sense_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_user_register
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>app_button_enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_button_enable &rArr; app_gpiote_user_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_user_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[84]"></a>app_button_disable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = app_button_disable &rArr; app_gpiote_user_disable &rArr; pins_sense_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_user_disable
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ias_c_evt
</UL>

<P><STRONG><a name="[2f]"></a>softdevice_assertion_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = softdevice_assertion_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_nrf_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softdevice_handler.o(.text)
</UL>
<P><STRONG><a name="[e3]"></a>intern_softdevice_events_execute</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = intern_softdevice_events_execute &rArr; sd_ble_evt_get &rArr; app_mailbox_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_evt_get
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_evt_get
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>softdevice_handler_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = softdevice_handler_init &rArr; sd_softdevice_enable &rArr; ser_sd_transport_open &rArr; ser_hal_transport_open &rArr; ser_phy_open &rArr; spi_master_open &rArr; spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[ab]"></a>softdevice_ble_evt_handler_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[ac]"></a>softdevice_sys_evt_handler_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[1c]"></a>SWI2_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SWI2_IRQHandler &rArr; intern_softdevice_events_execute &rArr; sd_ble_evt_get &rArr; app_mailbox_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f0]"></a>dm_handle_initialize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
</UL>

<P><STRONG><a name="[ae]"></a>dm_init</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dm_init &rArr; pstorage_load &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[b0]"></a>dm_register</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dm_register
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[7e]"></a>dm_whitelist_create</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = dm_whitelist_create
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
</UL>

<P><STRONG><a name="[f6]"></a>bond_data_load</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bond_data_load &rArr; pstorage_load &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[89]"></a>dm_ble_evt_handler</STRONG> (Thumb, 840 bytes, Stack size 64 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = dm_ble_evt_handler &rArr; sd_ble_gap_sec_params_reply &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_info_reply
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_data_load
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_handle_initialize
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_evt_notify
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_allocate
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_context_store
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_find
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_find
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[98]"></a>ble_conn_params_init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_conn_params_init &rArr; sd_ble_gap_ppcp_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_get
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>ble_conn_params_on_ble_evt</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_conn_params_on_ble_evt &rArr; conn_params_negotiation &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[b5]"></a>ble_srv_report_ref_encode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ble_srv_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
</UL>

<P><STRONG><a name="[1a8]"></a>CRITICAL_REGION_ENTER</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_util_platform.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_tx_pkt_send
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_rx_buf_set
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_put
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_get
</UL>

<P><STRONG><a name="[1a9]"></a>CRITICAL_REGION_EXIT</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_util_platform.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_tx_pkt_send
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_rx_buf_set
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_put
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_get
</UL>

<P><STRONG><a name="[ff]"></a>ble_enable_req_enc</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ble_enable.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_enable_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_enable
</UL>

<P><STRONG><a name="[101]"></a>ble_enable_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_enable.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_enable_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_rsp_dec
</UL>

<P><STRONG><a name="[103]"></a>ble_event_dec</STRONG> (Thumb, 526 bytes, Stack size 24 bytes, ble_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = ble_event_dec &rArr; ble_gatts_evt_rw_authorize_request_dec &rArr; ble_gatts_evt_rw_authorize_request_t_dec &rArr; ble_gatts_evt_write_t_dec &rArr; ble_gatts_attr_context_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_dec
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_dec
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_timeout_dec
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_sys_attr_missing_dec
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_sc_confirm_dec
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_dec
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_hvc_dec
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_write_rsp_dec
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_timeout_dec
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_dec
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_read_rsp_dec
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_prim_srvc_disc_rsp_dec
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_hvx_dec
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_desc_disc_rsp_dec
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_dec
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_dec
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_disc_rsp_dec
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_timeout_dec
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_params_request_dec
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_info_request_dec
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_rssi_changed_dec
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_passkey_display_dec
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_disconnected_dec
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_connected_dec
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_sec_update_dec
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_param_update_dec
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_dec
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_key_request_dec
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_tx_complete_dec
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_evt_handler
</UL>

<P><STRONG><a name="[105]"></a>ble_evt_tx_complete_dec</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, ble_evt_tx_complete.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_evt_tx_complete_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[124]"></a>ble_gap_adv_data_set_req_enc</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, ble_gap_adv_data_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_gap_adv_data_set_req_enc &rArr; len8data_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len8data_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_data_set
</UL>

<P><STRONG><a name="[127]"></a>ble_gap_adv_data_set_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gap_adv_data_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_adv_data_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_data_set_rsp_dec
</UL>

<P><STRONG><a name="[128]"></a>ble_gap_adv_start_req_enc</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, ble_gap_adv_start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_adv_start_req_enc &rArr; whitelist_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;whitelist_encode
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_start
</UL>

<P><STRONG><a name="[12a]"></a>ble_gap_adv_start_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gap_adv_start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_adv_start_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_start_rsp_dec
</UL>

<P><STRONG><a name="[17e]"></a>ble_gap_appearance_get_req_enc</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ble_gap_appearance_get.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_get
</UL>

<P><STRONG><a name="[12b]"></a>ble_gap_appearance_get_rsp_dec</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, ble_gap_appearance_get.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_gap_appearance_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_appearance_get_rsp_dec
</UL>

<P><STRONG><a name="[17f]"></a>ble_gap_appearance_set_req_enc</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ble_gap_appearance_set.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_set
</UL>

<P><STRONG><a name="[12d]"></a>ble_gap_appearance_set_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gap_appearance_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_appearance_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_appearance_set_rsp_dec
</UL>

<P><STRONG><a name="[12e]"></a>ble_gap_conn_param_update_req_enc</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ble_gap_conn_param_update.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gap_conn_param_update_req_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_conn_param_update
</UL>

<P><STRONG><a name="[130]"></a>ble_gap_conn_param_update_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gap_conn_param_update.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_conn_param_update_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_conn_param_update_rsp_dec
</UL>

<P><STRONG><a name="[17d]"></a>ble_gap_device_name_get_req_enc</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, ble_gap_device_name_get.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ble_gap_device_name_get_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_get
</UL>

<P><STRONG><a name="[131]"></a>ble_gap_device_name_get_rsp_dec</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, ble_gap_device_name_get.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = ble_gap_device_name_get_rsp_dec &rArr; len16data_dec &rArr; buf_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_dec
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_name_get_rsp_dec
</UL>

<P><STRONG><a name="[133]"></a>ble_gap_device_name_set_req_enc</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, ble_gap_device_name_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gap_device_name_set_req_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_set
</UL>

<P><STRONG><a name="[134]"></a>ble_gap_device_name_set_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gap_device_name_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_device_name_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_name_set_rsp_dec
</UL>

<P><STRONG><a name="[180]"></a>ble_gap_disconnect_req_enc</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ble_gap_disconnect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_gap_disconnect_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
</UL>

<P><STRONG><a name="[135]"></a>ble_gap_disconnect_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gap_disconnect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_disconnect_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_rsp_dec
</UL>

<P><STRONG><a name="[107]"></a>ble_gap_evt_auth_key_request_dec</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, ble_gap_evt_auth_key_request.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gap_evt_auth_key_request_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[110]"></a>ble_gap_evt_auth_status_dec</STRONG> (Thumb, 480 bytes, Stack size 32 bytes, ble_gap_evt_auth_status.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_evt_auth_status_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[108]"></a>ble_gap_evt_conn_param_update_dec</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, ble_gap_evt_conn_param_update.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gap_evt_conn_param_update_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[109]"></a>ble_gap_evt_conn_sec_update_dec</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, ble_gap_evt_conn_sec_update.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gap_evt_conn_sec_update_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[10a]"></a>ble_gap_evt_connected_dec</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, ble_gap_evt_connected.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gap_evt_connected_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[10b]"></a>ble_gap_evt_disconnected_dec</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, ble_gap_evt_disconnected.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gap_evt_disconnected_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[106]"></a>ble_gap_evt_passkey_display_dec</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, ble_gap_evt_passkey_display.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gap_evt_passkey_display_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[10d]"></a>ble_gap_evt_rssi_changed_dec</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, ble_gap_evt_rssi_changed.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gap_evt_rssi_changed_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int8_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[10e]"></a>ble_gap_evt_sec_info_request_dec</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, ble_gap_evt_sec_info_request.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gap_evt_sec_info_request_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[10f]"></a>ble_gap_evt_sec_params_request_dec</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, ble_gap_evt_sec_params_request.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gap_evt_sec_params_request_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[10c]"></a>ble_gap_evt_timeout_dec</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ble_gap_evt_timeout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_gap_evt_timeout_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[182]"></a>ble_gap_ppcp_get_req_enc</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ble_gap_ppcp_get.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_get
</UL>

<P><STRONG><a name="[137]"></a>ble_gap_ppcp_get_rsp_dec</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, ble_gap_ppcp_get.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_gap_ppcp_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ppcp_get_reply_rsp_dec
</UL>

<P><STRONG><a name="[138]"></a>ble_gap_ppcp_set_req_enc</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ble_gap_ppcp_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gap_ppcp_set_req_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
</UL>

<P><STRONG><a name="[13a]"></a>ble_gap_ppcp_set_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gap_ppcp_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_ppcp_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ppcp_set_rsp_dec
</UL>

<P><STRONG><a name="[13b]"></a>ble_gap_sec_info_reply_req_enc</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, ble_gap_sec_info_reply.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gap_sec_info_reply_req_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_info_reply
</UL>

<P><STRONG><a name="[13c]"></a>ble_gap_sec_info_reply_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gap_sec_info_reply.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_sec_info_reply_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sec_info_reply_rsp_dec
</UL>

<P><STRONG><a name="[181]"></a>ble_gap_sec_params_reply_req_enc</STRONG> (Thumb, 118 bytes, Stack size 12 bytes, ble_gap_sec_params_reply.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ble_gap_sec_params_reply_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
</UL>

<P><STRONG><a name="[13d]"></a>ble_gap_sec_params_reply_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gap_sec_params_reply.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_sec_params_reply_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sec_params_reply_rsp_dec
</UL>

<P><STRONG><a name="[13e]"></a>ble_gap_tx_power_set_req_enc</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, ble_gap_tx_power_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_tx_power_set_req_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_tx_power_set
</UL>

<P><STRONG><a name="[13f]"></a>ble_gap_tx_power_set_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gap_tx_power_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_tx_power_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_tx_power_set_rsp_dec
</UL>

<P><STRONG><a name="[185]"></a>ble_gattc_characteristics_discover_req_enc</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ble_gattc_characteristics_discover.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_gattc_characteristics_discover_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_characteristics_discover
</UL>

<P><STRONG><a name="[140]"></a>ble_gattc_characteristics_discover_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gattc_characteristics_discover.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gattc_characteristics_discover_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_characteristics_discover_rsp_dec
</UL>

<P><STRONG><a name="[111]"></a>ble_gattc_evt_char_disc_rsp_dec</STRONG> (Thumb, 418 bytes, Stack size 80 bytes, ble_gattc_evt_char_disc_rsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ble_gattc_evt_char_disc_rsp_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[112]"></a>ble_gattc_evt_char_val_by_uuid_read_rsp_dec</STRONG> (Thumb, 160 bytes, Stack size 64 bytes, ble_gattc_evt_char_val_by_uuid_read_rsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = ble_gattc_evt_char_val_by_uuid_read_rsp_dec &rArr; ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[119]"></a>ble_gattc_evt_char_vals_read_rsp_dec</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, ble_gattc_evt_char_vals_read_rsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ble_gattc_evt_char_vals_read_rsp_dec &rArr; ble_gattc_evt_char_vals_read_rsp_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[113]"></a>ble_gattc_evt_desc_disc_rsp_dec</STRONG> (Thumb, 232 bytes, Stack size 64 bytes, ble_gattc_evt_desc_disc_rsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_gattc_evt_desc_disc_rsp_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[116]"></a>ble_gattc_evt_hvx_dec</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, ble_gattc_evt_hvx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gattc_evt_hvx_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[114]"></a>ble_gattc_evt_prim_srvc_disc_rsp_dec</STRONG> (Thumb, 246 bytes, Stack size 56 bytes, ble_gattc_evt_prim_srvc_disc_rsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ble_gattc_evt_prim_srvc_disc_rsp_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[115]"></a>ble_gattc_evt_read_rsp_dec</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, ble_gattc_evt_read_rsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gattc_evt_read_rsp_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[11a]"></a>ble_gattc_evt_rel_disc_rsp_dec</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, ble_gattc_evt_rel_disc_rsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = ble_gattc_evt_rel_disc_rsp_dec &rArr; ble_gattc_evt_rel_disc_rsp_t_dec &rArr; ble_gattc_include_t_dec &rArr; ble_gattc_service_t_dec &rArr; ble_gattc_handle_range_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[117]"></a>ble_gattc_evt_timeout_dec</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, ble_gattc_evt_timeout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gattc_evt_timeout_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[118]"></a>ble_gattc_evt_write_rsp_dec</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, ble_gattc_evt_write_rsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gattc_evt_write_rsp_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[184]"></a>ble_gattc_primary_services_discover_req_enc</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, ble_gattc_primary_services_discover.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ble_gattc_primary_services_discover_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_primary_services_discover
</UL>

<P><STRONG><a name="[144]"></a>ble_gattc_primary_services_discover_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gattc_primary_services_discover.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gattc_primary_services_discover_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_primary_services_discover_rsp_dec
</UL>

<P><STRONG><a name="[145]"></a>ble_gattc_write_req_enc</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, ble_gattc_write.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gattc_write_req_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_write
</UL>

<P><STRONG><a name="[147]"></a>ble_gattc_write_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gattc_write.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gattc_write_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_rsp_dec
</UL>

<P><STRONG><a name="[148]"></a>ble_gatts_characteristic_add_req_enc</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, ble_gatts_characteristic_add.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
</UL>

<P><STRONG><a name="[14a]"></a>ble_gatts_characteristic_add_rsp_dec</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, ble_gatts_characteristic_add.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ble_gatts_characteristic_add_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_characteristic_add_rsp_dec
</UL>

<P><STRONG><a name="[14c]"></a>ble_gatts_descriptor_add_req_enc</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, ble_gatts_descriptor_add.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_gatts_descriptor_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_descriptor_add
</UL>

<P><STRONG><a name="[14d]"></a>ble_gatts_descriptor_add_rsp_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, ble_gatts_descriptor_add.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_gatts_descriptor_add_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_descriptor_add_rsp_dec
</UL>

<P><STRONG><a name="[11e]"></a>ble_gatts_evt_hvc_dec</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, ble_gatts_evt_hvc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gatts_evt_hvc_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[120]"></a>ble_gatts_evt_rw_authorize_request_dec</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, ble_gatts_evt_rw_authorize_request.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = ble_gatts_evt_rw_authorize_request_dec &rArr; ble_gatts_evt_rw_authorize_request_t_dec &rArr; ble_gatts_evt_write_t_dec &rArr; ble_gatts_attr_context_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_t_dec
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[11d]"></a>ble_gatts_evt_sc_confirm_dec</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ble_gatts_evt_sc_confirm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_gatts_evt_sc_confirm_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[11f]"></a>ble_gatts_evt_sys_attr_missing_dec</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, ble_gatts_evt_sys_attr_missing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gatts_evt_sys_attr_missing_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[11c]"></a>ble_gatts_evt_timeout_dec</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, ble_gatts_evt_timeout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gatts_evt_timeout_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[11b]"></a>ble_gatts_evt_write_dec</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, ble_gatts_evt_write.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = ble_gatts_evt_write_dec &rArr; ble_gatts_evt_write_t_dec &rArr; ble_gatts_attr_context_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[150]"></a>ble_gatts_hvx_req_enc</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, ble_gatts_hvx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gatts_hvx_req_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_hvx
</UL>

<P><STRONG><a name="[152]"></a>ble_gatts_hvx_rsp_dec</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, ble_gatts_hvx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ble_gatts_hvx_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_hvx_rsp_dec
</UL>

<P><STRONG><a name="[187]"></a>ble_gatts_service_add_req_enc</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, ble_gatts_service_add.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ble_gatts_service_add_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
</UL>

<P><STRONG><a name="[153]"></a>ble_gatts_service_add_rsp_dec</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, ble_gatts_service_add.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_gatts_service_add_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_service_add_rsp_dec
</UL>

<P><STRONG><a name="[189]"></a>ble_gatts_sys_attr_get_req_enc</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, ble_gatts_sys_attr_get.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ble_gatts_sys_attr_get_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_get
</UL>

<P><STRONG><a name="[154]"></a>ble_gatts_sys_attr_get_rsp_dec</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, ble_gatts_sys_attr_get.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_gatts_sys_attr_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_sys_attr_get_rsp_dec
</UL>

<P><STRONG><a name="[155]"></a>ble_gatts_sys_attr_set_req_enc</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, ble_gatts_sys_attr_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gatts_sys_attr_set_req_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_set
</UL>

<P><STRONG><a name="[156]"></a>ble_gatts_sys_attr_set_rsp_dec</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_gatts_sys_attr_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gatts_sys_attr_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_sys_attr_set_rsp_dec
</UL>

<P><STRONG><a name="[188]"></a>ble_gatts_value_get_req_enc</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, ble_gatts_value_get.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gatts_value_get_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_get
</UL>

<P><STRONG><a name="[157]"></a>ble_gatts_value_get_rsp_dec</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, ble_gatts_value_get.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ble_gatts_value_get_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_value_get_rsp_dec
</UL>

<P><STRONG><a name="[159]"></a>ble_gatts_value_set_req_enc</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, ble_gatts_value_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gatts_value_set_req_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_set
</UL>

<P><STRONG><a name="[15a]"></a>ble_gatts_value_set_rsp_dec</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, ble_gatts_value_set.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_gatts_value_set_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_value_set_rsp_dec
</UL>

<P><STRONG><a name="[121]"></a>ble_l2cap_evt_rx_dec</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, ble_l2cap_evt_rx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_l2cap_evt_rx_dec &rArr; ble_l2cap_evt_rx_t_dec &rArr; ble_l2cap_header_t_dec &rArr; uint16_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_t_dec
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[179]"></a>ble_uuid_encode_req_enc</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, ble_uuid_encode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_uuid_encode_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_uuid_encode
</UL>

<P><STRONG><a name="[15c]"></a>ble_uuid_encode_rsp_dec</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, ble_uuid_encode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_uuid_encode_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_encode_rsp_dec
</UL>

<P><STRONG><a name="[18b]"></a>power_system_off_req_enc</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, power_system_off.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
</UL>

<P><STRONG><a name="[15d]"></a>ble_gap_irk_enc</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ble_gap_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[3a]"></a>ble_gap_irk_dec</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ble_gap_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_gap_irk_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_struct_serialization.o(.text)
</UL>
<P><STRONG><a name="[15e]"></a>ble_gap_conn_sec_mode_enc</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ble_gap_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gap_conn_sec_mode_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_md_enc
</UL>

<P><STRONG><a name="[15f]"></a>ble_gap_conn_sec_mode_dec</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ble_gap_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_sec_t_dec
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_md_dec
</UL>

<P><STRONG><a name="[160]"></a>ble_gap_conn_sec_t_dec</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, ble_gap_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_sec_mode_dec
</UL>

<P><STRONG><a name="[161]"></a>ble_gap_opt_local_conn_latency_t_dec</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>

<P><STRONG><a name="[162]"></a>ble_gap_opt_passkey_t_dec</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ble_gap_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_dec
</UL>

<P><STRONG><a name="[163]"></a>ble_gap_opt_privacy_t_dec</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>

<P><STRONG><a name="[141]"></a>ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec</STRONG> (Thumb, 196 bytes, Stack size 56 bytes, ble_gattc_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_dec
</UL>

<P><STRONG><a name="[142]"></a>ble_gattc_evt_char_vals_read_rsp_t_dec</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ble_gattc_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_gattc_evt_char_vals_read_rsp_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_dec
</UL>

<P><STRONG><a name="[164]"></a>ble_gattc_handle_range_t_enc</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, ble_gattc_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
</UL>

<P><STRONG><a name="[165]"></a>ble_gattc_handle_range_t_dec</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, ble_gattc_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gattc_handle_range_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_service_t_dec
</UL>

<P><STRONG><a name="[166]"></a>ble_gattc_service_t_dec</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, ble_gattc_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_gattc_service_t_dec &rArr; ble_gattc_handle_range_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_handle_range_t_dec
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_include_t_dec
</UL>

<P><STRONG><a name="[168]"></a>ble_gattc_include_t_dec</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, ble_gattc_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ble_gattc_include_t_dec &rArr; ble_gattc_service_t_dec &rArr; ble_gattc_handle_range_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_service_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_t_dec
</UL>

<P><STRONG><a name="[143]"></a>ble_gattc_evt_rel_disc_rsp_t_dec</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, ble_gattc_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = ble_gattc_evt_rel_disc_rsp_t_dec &rArr; ble_gattc_include_t_dec &rArr; ble_gattc_service_t_dec &rArr; ble_gattc_handle_range_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_include_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_dec
</UL>

<P><STRONG><a name="[169]"></a>ser_ble_gatts_char_pf_dec</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>

<P><STRONG><a name="[3b]"></a>ser_ble_gatts_char_pf_enc</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ser_ble_gatts_char_pf_enc &rArr; uint16_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatts_struct_serialization.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>ble_gatts_attr_md_enc</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gatts_attr_md_enc &rArr; ble_gap_conn_sec_mode_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_sec_mode_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatts_struct_serialization.o(.text)
</UL>
<P><STRONG><a name="[16a]"></a>ble_gatts_attr_md_dec</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, ble_gatts_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_sec_mode_dec
</UL>

<P><STRONG><a name="[36]"></a>ble_gatts_char_md_enc</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, ble_gatts_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_gatts_char_md_enc &rArr; len16data_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatts_characteristic_add.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>ble_gatts_attr_enc</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_gatts_attr_enc &rArr; len16data_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_enc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ble_gatts_descriptor_add.o(.text)
<LI> ble_gatts_characteristic_add.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>ble_gatts_char_handles_dec</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_gatts_char_handles_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatts_characteristic_add.o(.text)
</UL>
<P><STRONG><a name="[16c]"></a>ble_gatts_attr_context_t_dec</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, ble_gatts_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_gatts_attr_context_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_read_t_dec
</UL>

<P><STRONG><a name="[14f]"></a>ble_gatts_evt_write_t_dec</STRONG> (Thumb, 212 bytes, Stack size 88 bytes, ble_gatts_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = ble_gatts_evt_write_t_dec &rArr; ble_gatts_attr_context_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_context_t_dec
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_dec
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_t_dec
</UL>

<P><STRONG><a name="[16e]"></a>ble_gatts_evt_read_t_dec</STRONG> (Thumb, 118 bytes, Stack size 80 bytes, ble_gatts_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = ble_gatts_evt_read_t_dec &rArr; ble_gatts_attr_context_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_context_t_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_t_dec
</UL>

<P><STRONG><a name="[14e]"></a>ble_gatts_evt_rw_authorize_request_t_dec</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, ble_gatts_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = ble_gatts_evt_rw_authorize_request_t_dec &rArr; ble_gatts_evt_write_t_dec &rArr; ble_gatts_attr_context_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_read_t_dec
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_dec
</UL>

<P><STRONG><a name="[16f]"></a>ble_gatts_read_authorize_params_t_enc</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, ble_gatts_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_rw_authorize_reply_params_t_enc
</UL>

<P><STRONG><a name="[170]"></a>ble_gatts_write_authorize_params_t_enc</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ble_gatts_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_rw_authorize_reply_params_t_enc
</UL>

<P><STRONG><a name="[171]"></a>ble_gatts_rw_authorize_reply_params_t_enc</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_write_authorize_params_t_enc
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_authorize_params_t_enc
</UL>

<P><STRONG><a name="[3d]"></a>ble_uuid_t_enc</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, ble_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_uuid_t_enc &rArr; uint16_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatts_struct_serialization.o(.text)
</UL>
<P><STRONG><a name="[167]"></a>ble_uuid_t_dec</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, ble_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_context_t_dec
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_service_t_dec
</UL>

<P><STRONG><a name="[172]"></a>ble_uuid128_t_enc</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ble_struct_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[173]"></a>ble_l2cap_header_t_dec</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ble_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_l2cap_header_t_dec &rArr; uint16_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_t_dec
</UL>

<P><STRONG><a name="[15b]"></a>ble_l2cap_evt_rx_t_dec</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, ble_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_l2cap_evt_rx_t_dec &rArr; ble_l2cap_header_t_dec &rArr; uint16_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_header_t_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_dec
</UL>

<P><STRONG><a name="[35]"></a>ble_enable_params_t_enc</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ble_struct_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_enable_params_t_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_enable.o(.text)
</UL>
<P><STRONG><a name="[12c]"></a>ser_ble_cmd_rsp_result_code_dec</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_get_rsp_dec
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_get_rsp_dec
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_set_rsp_dec
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_get_rsp_dec
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_get_rsp_dec
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_add_rsp_dec
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_rsp_dec
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_rsp_dec
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_rsp_dec
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_get_rsp_dec
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_encode_rsp_dec
</UL>

<P><STRONG><a name="[102]"></a>ser_ble_cmd_rsp_dec</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect_rsp_dec
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_set_rsp_dec
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update_rsp_dec
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_set_rsp_dec
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_rsp_dec
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_data_set_rsp_dec
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_enable_rsp_dec
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_set_rsp_dec
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_write_rsp_dec
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_primary_services_discover_rsp_dec
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_characteristics_discover_rsp_dec
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_tx_power_set_rsp_dec
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_reply_rsp_dec
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_info_reply_rsp_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_set_rsp_dec
</UL>

<P><STRONG><a name="[175]"></a>uint32_t_dec</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ble_serialization.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_decode
</UL>

<P><STRONG><a name="[149]"></a>uint16_t_enc</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint16_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_req_enc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_char_md_enc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_enc
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_req_enc
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_enc
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_handle_range_t_enc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_write_authorize_params_t_enc
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_authorize_params_t_enc
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_gatts_char_pf_enc
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_enc
</UL>

<P><STRONG><a name="[39]"></a>uint16_t_dec</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_dec
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_dec
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_dec
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_dec
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_dec
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_opt_privacy_t_dec
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_opt_local_conn_latency_t_dec
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_t_dec
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_t_dec
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_header_t_dec
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_read_t_dec
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_include_t_dec
</UL>
<BR>[Address Reference Count : 3]<UL><LI> ble_gatts_value_get.o(.text)
<LI> ble_gatts_hvx.o(.text)
<LI> ble_gap_struct_serialization.o(.text)
</UL>
<P><STRONG><a name="[122]"></a>uint16_dec</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_get_rsp_dec
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_timeout_dec
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_sys_attr_missing_dec
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_sc_confirm_dec
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_hvc_dec
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_write_rsp_dec
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_timeout_dec
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_read_rsp_dec
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_prim_srvc_disc_rsp_dec
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_hvx_dec
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_desc_disc_rsp_dec
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_dec
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_dec
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_disc_rsp_dec
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_timeout_dec
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_params_request_dec
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_info_request_dec
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_rssi_changed_dec
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_passkey_display_dec
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_disconnected_dec
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_connected_dec
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_sec_update_dec
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_param_update_dec
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_dec
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_key_request_dec
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_tx_complete_dec
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_set_rsp_dec
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_get_rsp_dec
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_add_rsp_dec
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_rsp_dec
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_char_handles_dec
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_t_dec
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_get_rsp_dec
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_context_t_dec
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_gatts_char_pf_dec
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_handle_range_t_dec
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_dec
</UL>

<P><STRONG><a name="[125]"></a>uint8_t_enc</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_enc
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len8data_enc
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_data_set_req_enc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_rw_authorize_reply_params_t_enc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_char_md_enc
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_req_enc
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_enc
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_tx_power_set_req_enc
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_authorize_params_t_enc
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_gatts_char_pf_enc
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_sec_mode_enc
</UL>

<P><STRONG><a name="[16d]"></a>uint8_t_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint8_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_t_dec
</UL>

<P><STRONG><a name="[123]"></a>uint8_dec</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uint8_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_sec_t_dec
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_timeout_dec
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_sys_attr_missing_dec
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_write_rsp_dec
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_timeout_dec
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_prim_srvc_disc_rsp_dec
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_hvx_dec
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_desc_disc_rsp_dec
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_disc_rsp_dec
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_timeout_dec
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_disconnected_dec
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_sec_update_dec
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_key_request_dec
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_tx_complete_dec
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_dec
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_context_t_dec
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_md_dec
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_gatts_char_pf_dec
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_sec_mode_dec
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_dec
</UL>

<P><STRONG><a name="[136]"></a>int8_dec</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = int8_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_rssi_changed_dec
</UL>

<P><STRONG><a name="[176]"></a>buf_enc</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len8data_enc
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_enc
</UL>

<P><STRONG><a name="[126]"></a>len8data_enc</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = len8data_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_enc
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_data_set_req_enc
</UL>

<P><STRONG><a name="[158]"></a>buf_dec</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = buf_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_dec
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_opt_passkey_t_dec
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_get_rsp_dec
</UL>

<P><STRONG><a name="[16b]"></a>len16data_enc</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = len16data_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_char_md_enc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_enc
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_read_authorize_params_t_enc
</UL>

<P><STRONG><a name="[132]"></a>len16data_dec</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = len16data_dec &rArr; buf_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_dec
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_get_rsp_dec
</UL>

<P><STRONG><a name="[100]"></a>cond_field_enc</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, cond_field_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_enable_req_enc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_req_enc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_char_md_enc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_enc
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_req_enc
</UL>

<P><STRONG><a name="[14b]"></a>cond_field_dec</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, cond_field_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_opt_privacy_t_dec
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_opt_local_conn_latency_t_dec
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_get_rsp_dec
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_rsp_dec
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_rsp_dec
</UL>

<P><STRONG><a name="[c4]"></a>sd_ble_uuid_encode</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, app_mw_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_encode_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_sized_encode
</UL>

<P><STRONG><a name="[aa]"></a>sd_ble_enable</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_mw_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sd_ble_enable &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_enable_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[7f]"></a>sd_ble_gap_adv_start</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sd_ble_gap_adv_start &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
</UL>

<P><STRONG><a name="[cf]"></a>sd_ble_gap_device_name_get</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sd_ble_gap_device_name_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_get_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_encode
</UL>

<P><STRONG><a name="[c8]"></a>sd_ble_gap_appearance_get</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sd_ble_gap_appearance_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_get_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[a0]"></a>sd_ble_gap_device_name_set</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sd_ble_gap_device_name_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_set_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[a1]"></a>sd_ble_gap_appearance_set</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sd_ble_gap_appearance_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_set_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[a2]"></a>sd_ble_gap_ppcp_set</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sd_ble_gap_ppcp_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_set_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[ce]"></a>sd_ble_gap_adv_data_set</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sd_ble_gap_adv_data_set &rArr; ble_gap_adv_data_set_req_enc &rArr; len8data_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_data_set_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[fb]"></a>sd_ble_gap_conn_param_update</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sd_ble_gap_conn_param_update &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_timeout_handler
</UL>

<P><STRONG><a name="[86]"></a>sd_ble_gap_disconnect</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sd_ble_gap_disconnect &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_timeout_handler
</UL>

<P><STRONG><a name="[f9]"></a>sd_ble_gap_sec_info_reply</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sd_ble_gap_sec_info_reply &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_info_reply_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[f8]"></a>sd_ble_gap_sec_params_reply</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sd_ble_gap_sec_params_reply &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_reply_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[fc]"></a>sd_ble_gap_ppcp_get</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sd_ble_gap_ppcp_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_get_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
</UL>

<P><STRONG><a name="[a3]"></a>sd_ble_gap_tx_power_set</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sd_ble_gap_tx_power_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_tx_power_set_req_enc
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[bc]"></a>sd_ble_gattc_primary_services_discover</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, app_mw_ble_gattc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sd_ble_gattc_primary_services_discover &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_primary_services_discover_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ias_c_on_ble_evt
</UL>

<P><STRONG><a name="[bd]"></a>sd_ble_gattc_characteristics_discover</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, app_mw_ble_gattc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sd_ble_gattc_characteristics_discover &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_characteristics_discover_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ias_c_on_ble_evt
</UL>

<P><STRONG><a name="[be]"></a>sd_ble_gattc_write</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, app_mw_ble_gattc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sd_ble_gattc_write &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_write_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ias_c_send_alert_level
</UL>

<P><STRONG><a name="[ef]"></a>sd_ble_gatts_sys_attr_set</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sd_ble_gatts_sys_attr_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_set_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_apply
</UL>

<P><STRONG><a name="[b9]"></a>sd_ble_gatts_hvx</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sd_ble_gatts_hvx &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_battery_level_update
</UL>

<P><STRONG><a name="[b7]"></a>sd_ble_gatts_service_add</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sd_ble_gatts_service_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_add_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tps_init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lls_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ias_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_init
</UL>

<P><STRONG><a name="[b4]"></a>sd_ble_gatts_characteristic_add</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_power_level_char_add
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_level_char_add
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_level_char_add
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
</UL>

<P><STRONG><a name="[b6]"></a>sd_ble_gatts_descriptor_add</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = sd_ble_gatts_descriptor_add &rArr; ble_gatts_descriptor_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
</UL>

<P><STRONG><a name="[c0]"></a>sd_ble_gatts_value_get</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sd_ble_gatts_value_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_get_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lls_alert_level_get
</UL>

<P><STRONG><a name="[b8]"></a>sd_ble_gatts_value_set</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sd_ble_gatts_value_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_set_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_battery_level_update
</UL>

<P><STRONG><a name="[ec]"></a>sd_ble_gatts_sys_attr_get</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sd_ble_gatts_sys_attr_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_get_req_enc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
</UL>

<P><STRONG><a name="[88]"></a>sd_power_system_off</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_mw_nrf_soc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sd_power_system_off &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_system_off_req_enc
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_power_system_off_set
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[e4]"></a>sd_evt_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ser_softdevice_handler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>

<P><STRONG><a name="[e5]"></a>sd_ble_evt_get</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ser_softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sd_ble_evt_get &rArr; app_mailbox_get
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>

<P><STRONG><a name="[e6]"></a>sd_softdevice_enable</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ser_softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = sd_softdevice_enable &rArr; ser_sd_transport_open &rArr; ser_hal_transport_open &rArr; ser_phy_open &rArr; spi_master_open &rArr; spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_open
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_nrf_reset_pin_set
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_nrf_reset_pin_clear
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_hw_init
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_delay
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
</UL>

<P><STRONG><a name="[9d]"></a>sd_nvic_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ser_softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sd_nvic_EnableIRQ &rArr; ser_app_hal_nrf_evt_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_nrf_irq_enable
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_nrf_evt_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_start
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
</UL>

<P><STRONG><a name="[99]"></a>sd_app_evt_wait</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ser_softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sd_app_evt_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_wait_for_event
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_write
</UL>

<P><STRONG><a name="[18d]"></a>ser_sd_transport_rx_free</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ser_sd_transport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ser_sd_transport_rx_free &rArr; ser_hal_transport_rx_pkt_free &rArr; ser_phy_rx_buf_set
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_rx_pkt_free
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_packet_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_evt_handler
</UL>

<P><STRONG><a name="[197]"></a>ser_sd_transport_open</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ser_sd_transport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ser_sd_transport_open &rArr; ser_hal_transport_open &rArr; ser_phy_open &rArr; spi_master_open &rArr; spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_open
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[191]"></a>ser_sd_transport_is_busy</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ser_sd_transport.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_rsp_wait
</UL>

<P><STRONG><a name="[17b]"></a>ser_sd_transport_tx_alloc</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ser_sd_transport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ser_sd_transport_tx_alloc &rArr; ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>

<P><STRONG><a name="[17a]"></a>ser_sd_transport_cmd_write</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ser_sd_transport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_uuid_encode
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_get
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_data_set
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_write
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_primary_services_discover
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_characteristics_discover
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_get
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_hvx
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_descriptor_add
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_tx_power_set
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_set
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_set
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_start
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_get
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_conn_param_update
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_set
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_get
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_info_reply
</UL>

<P><STRONG><a name="[1a2]"></a>ser_hal_transport_tx_pkt_free</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ser_hal_transport.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_events_handler
</UL>

<P><STRONG><a name="[19f]"></a>ser_hal_transport_open</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ser_hal_transport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ser_hal_transport_open &rArr; ser_phy_open &rArr; spi_master_open &rArr; spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_open
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_open
</UL>

<P><STRONG><a name="[19b]"></a>ser_hal_transport_rx_pkt_free</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ser_hal_transport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ser_hal_transport_rx_pkt_free &rArr; ser_phy_rx_buf_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_rx_buf_set
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_interrupts_enable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_interrupts_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_free
</UL>

<P><STRONG><a name="[1a0]"></a>ser_hal_transport_tx_pkt_alloc</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ser_hal_transport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_tx_alloc
</UL>

<P><STRONG><a name="[1a1]"></a>ser_hal_transport_tx_pkt_send</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ser_hal_transport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_tx_pkt_send
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_interrupts_enable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_interrupts_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>

<P><STRONG><a name="[196]"></a>app_mailbox_create</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_mailbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_mailbox_create
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[18e]"></a>app_mailbox_put</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, app_mailbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_mailbox_put
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRITICAL_REGION_EXIT
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRITICAL_REGION_ENTER
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_evt_handler
</UL>

<P><STRONG><a name="[192]"></a>app_mailbox_get</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, app_mailbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_mailbox_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRITICAL_REGION_EXIT
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRITICAL_REGION_ENTER
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_evt_get
</UL>

<P><STRONG><a name="[1aa]"></a>nrf_delay_ms</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nrf_delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_delay
</UL>

<P><STRONG><a name="[1ac]"></a>ble_flash_block_write</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_flash_block_write &rArr; flash_word_write &rArr; sd_app_evt_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_write
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
</UL>

<P><STRONG><a name="[1ad]"></a>ble_flash_page_erase</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
</UL>

<P><STRONG><a name="[193]"></a>ser_app_hal_hw_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[190]"></a>ser_app_hal_wait_for_event</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_app_evt_wait
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_rsp_wait
</UL>

<P><STRONG><a name="[195]"></a>ser_app_hal_delay</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ser_app_hal_delay &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[194]"></a>ser_app_hal_nrf_reset_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[198]"></a>ser_app_hal_nrf_reset_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[19a]"></a>ser_app_hal_nrf_evt_irq_enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ser_app_hal_nrf_evt_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_EnableIRQ
</UL>

<P><STRONG><a name="[18f]"></a>ser_app_hal_nrf_evt_pending</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_evt_handler
</UL>

<P><STRONG><a name="[199]"></a>ser_app_hal_nrf_irq_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_EnableIRQ
</UL>

<P><STRONG><a name="[9b]"></a>sd_nvic_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_start
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
</UL>

<P><STRONG><a name="[1ca]"></a>sd_nvic_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>

<P><STRONG><a name="[9c]"></a>sd_nvic_SetPriority</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sd_nvic_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_start
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
</UL>

<P><STRONG><a name="[1c9]"></a>sd_nvic_critical_region_enter</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>

<P><STRONG><a name="[1cb]"></a>sd_nvic_critical_region_exit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>

<P><STRONG><a name="[ad]"></a>pstorage_init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = pstorage_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[f3]"></a>pstorage_register</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = pstorage_register &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
</UL>

<P><STRONG><a name="[f1]"></a>pstorage_block_identifier_get</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_data_load
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_context_store
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
</UL>

<P><STRONG><a name="[31]"></a>pstorage_store</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pstorage_store &rArr; ble_flash_block_write &rArr; flash_word_write &rArr; sd_app_evt_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>pstorage_update</STRONG> (Thumb, 382 bytes, Stack size 56 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = pstorage_update &rArr; ble_flash_block_write &rArr; flash_word_write &rArr; sd_app_evt_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.text)
</UL>
<P><STRONG><a name="[ee]"></a>pstorage_load</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pstorage_load &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_data_load
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_load
</UL>

<P><STRONG><a name="[f4]"></a>pstorage_clear</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pstorage_clear &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
</UL>

<P><STRONG><a name="[8f]"></a>pstorage_sys_event_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[7d]"></a>pstorage_access_status_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
</UL>

<P><STRONG><a name="[c]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOTE_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SWI1_IRQHandler</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SWI1_IRQHandler &rArr; sense_level_toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sense_level_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b3]"></a>app_gpiote_enable_interrupts</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_gpiote_enable_interrupts
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_open
</UL>

<P><STRONG><a name="[92]"></a>app_gpiote_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_gpiote_init &rArr; app_gpiote_enable_interrupts
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_enable_interrupts
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>app_gpiote_user_register</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = app_gpiote_user_register &rArr; pins_sense_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pins_sense_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[1c1]"></a>app_gpiote_input_event_handler_register</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_gpiote_input_event_handler_register
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_open
</UL>

<P><STRONG><a name="[1c2]"></a>app_gpiote_end_irq_event_handler_register</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_open
</UL>

<P><STRONG><a name="[e0]"></a>app_gpiote_user_enable</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = app_gpiote_user_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
</UL>

<P><STRONG><a name="[e1]"></a>app_gpiote_user_disable</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = app_gpiote_user_disable &rArr; pins_sense_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pins_sense_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_disable
</UL>

<P><STRONG><a name="[de]"></a>app_gpiote_pins_state_get</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_delay_timeout_handler
</UL>

<P><STRONG><a name="[18c]"></a>ser_app_power_system_off_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ser_app_power_system_off.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
</UL>

<P><STRONG><a name="[19c]"></a>ser_app_power_system_off_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ser_app_power_system_off.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_hal_handler
</UL>

<P><STRONG><a name="[19d]"></a>ser_app_power_system_off_enter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ser_app_power_system_off.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_hal_handler
</UL>

<P><STRONG><a name="[5]"></a>PendSV_Handler</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PendSV_Handler &rArr; ser_phy_switch_state &rArr; frame_send &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_switch_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>ser_phy_spi_master_ready</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ser_phy_spi_master_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_phy_nrf51_spi_master.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>ser_phy_spi_master_request</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ser_phy_spi_master_request
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_phy_nrf51_spi_master.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>ser_phy_spi_master_irq_end</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ser_phy_nrf51_spi_master.o(.text)
</UL>
<P><STRONG><a name="[1a7]"></a>ser_phy_tx_pkt_send</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRITICAL_REGION_EXIT
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRITICAL_REGION_ENTER
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_send
</UL>

<P><STRONG><a name="[1a3]"></a>ser_phy_rx_buf_set</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ser_phy_rx_buf_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRITICAL_REGION_EXIT
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRITICAL_REGION_ENTER
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_events_handler
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_rx_pkt_free
</UL>

<P><STRONG><a name="[1a4]"></a>ser_phy_open</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ser_phy_open &rArr; spi_master_open &rArr; spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_evt_handler_reg
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_end_irq_event_handler_register
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_input_event_handler_register
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_enable_interrupts
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_open
</UL>

<P><STRONG><a name="[1a6]"></a>ser_phy_interrupts_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_send
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_rx_pkt_free
</UL>

<P><STRONG><a name="[1a5]"></a>ser_phy_interrupts_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_send
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_rx_pkt_free
</UL>

<P><STRONG><a name="[a]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI0_TWI0_IRQHandler &rArr; spi_master_send_recv_irq &rArr; spi_master_signal_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_get_instance
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv_irq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1bf]"></a>spi_master_open</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spi_master_open &rArr; spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_SetPriority
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_EnableIRQ
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_ClearPendingIRQ
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_get_instance
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_init_hw_instance
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_open
</UL>

<P><STRONG><a name="[1b8]"></a>spi_master_send_recv</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_EnableIRQ
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_initial_bytes
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_get_instance
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_buffer_init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_critical_region_exit
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_critical_region_enter
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_get
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_send
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_send
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_get
</UL>

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_nrf51.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_manual_peripheral_setup_needed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[1d7]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[1d8]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_in_percent
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_register
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_set_req_enc
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_enc
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_req_enc
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;whitelist_encode
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_write_rsp_dec
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_read_rsp_dec
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_hvx_dec
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_passkey_display_dec
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_connected_dec
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_dec
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_allocate
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_t_dec
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_set_req_enc
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_dec
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_set_req_enc
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_get_rsp_dec
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_req_enc
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_write_req_enc
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_t_dec
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_info_reply_req_enc
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_read_t_dec
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_irk_dec
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_irk_enc
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid128_t_enc
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_encode_rsp_dec
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_put
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_get
</UL>

<P><STRONG><a name="[ed]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_open
</UL>

<P><STRONG><a name="[1d9]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[1ce]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[1da]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1db]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_power_level_char_add
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_level_char_add
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_level_char_add
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
</UL>

<P><STRONG><a name="[1dc]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1cf]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[ea]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_find
</UL>

<P><STRONG><a name="[177]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_decode
</UL>

<P><STRONG><a name="[1dd]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[1de]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[1df]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1e0]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1e1]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_event.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_switch_state
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_events_handler
</UL>

<P><STRONG><a name="[1e2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1e3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1e4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1c0]"></a>spi_master_evt_handler_reg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, spi_master.o(i.spi_master_evt_handler_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_master_evt_handler_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_get_instance
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_open
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[27]"></a>service_error_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[76]"></a>adv_led_blink_stop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = adv_led_blink_stop &rArr; app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[78]"></a>alert_led_blink_stop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = alert_led_blink_stop &rArr; app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_event_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_signal
</UL>

<P><STRONG><a name="[79]"></a>advertising_init</STRONG> (Thumb, 86 bytes, Stack size 80 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
</UL>

<P><STRONG><a name="[7c]"></a>advertising_start</STRONG> (Thumb, 270 bytes, Stack size 128 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = advertising_start &rArr; advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_start
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_access_status_get
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_whitelist_create
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>

<P><STRONG><a name="[22]"></a>battery_level_meas_timeout_handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = battery_level_meas_timeout_handler &rArr; adc_start &rArr; sd_nvic_EnableIRQ &rArr; ser_app_hal_nrf_evt_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>mild_alert_timeout_handler</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mild_alert_timeout_handler &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[24]"></a>adv_led_blink_timeout_handler</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = adv_led_blink_timeout_handler &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[83]"></a>alert_signal</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = alert_signal &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_led_blink_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_lls_evt
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ias_evt
</UL>

<P><STRONG><a name="[25]"></a>on_ias_evt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = on_ias_evt &rArr; alert_signal &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>on_lls_evt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = on_lls_evt &rArr; alert_signal &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>on_bas_evt</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = on_bas_evt &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>on_ias_c_evt</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = on_ias_c_evt &rArr; app_button_disable &rArr; app_gpiote_user_disable &rArr; pins_sense_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_disable
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>conn_params_error_handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[85]"></a>on_ble_evt</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = on_ble_evt &rArr; advertising_start &rArr; advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_led_blink_stop
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_blink_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[28]"></a>ble_evt_dispatch</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = ble_evt_dispatch &rArr; on_ble_evt &rArr; advertising_start &rArr; advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lls_on_ble_evt
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ias_on_ble_evt
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ias_c_on_ble_evt
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_on_ble_evt
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>sys_evt_dispatch</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = sys_evt_dispatch &rArr; advertising_start &rArr; advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>device_manager_evt_handler</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = device_manager_evt_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[0]"></a>button_event_handler</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = button_event_handler &rArr; ble_ias_c_send_alert_level &rArr; sd_ble_gattc_write &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ias_c_send_alert_level
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alert_led_blink_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[82]"></a>nrf_gpio_pin_toggle</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_led_blink_timeout_handler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mild_alert_timeout_handler
</UL>

<P><STRONG><a name="[74]"></a>battery_level_in_percent</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = battery_level_in_percent &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[81]"></a>adc_start</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = adc_start &rArr; sd_nvic_EnableIRQ &rArr; ser_app_hal_nrf_evt_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_SetPriority
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_EnableIRQ
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_ClearPendingIRQ
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_meas_timeout_handler
</UL>

<P><STRONG><a name="[91]"></a>timers_init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = timers_init &rArr; app_timer_init &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>gap_params_init</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gap_params_init &rArr; sd_ble_gap_device_name_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_tx_power_set
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_set
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_set
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>services_init</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = services_init &rArr; bas_init &rArr; ble_bas_init &rArr; battery_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tps_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ias_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ias_c_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lls_init
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>ble_stack_init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ble_stack_init &rArr; softdevice_handler_init &rArr; sd_softdevice_enable &rArr; ser_sd_transport_open &rArr; ser_hal_transport_open &rArr; ser_phy_open &rArr; spi_master_open &rArr; spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_sys_evt_handler_set
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_ble_evt_handler_set
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_enable
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>device_manager_init</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = device_manager_init &rArr; dm_init &rArr; pstorage_load &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_register
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>lls_init</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lls_init &rArr; ble_lls_init &rArr; alert_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lls_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[a7]"></a>bas_init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = bas_init &rArr; ble_bas_init &rArr; battery_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[b3]"></a>battery_level_char_add</STRONG> (Thumb, 306 bytes, Stack size 96 bytes, ble_bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = battery_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_descriptor_add
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_report_ref_encode
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_init
</UL>

<P><STRONG><a name="[ba]"></a>alert_level_char_add</STRONG> (Thumb, 130 bytes, Stack size 80 bytes, ble_ias.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = alert_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ias_init
</UL>

<P><STRONG><a name="[bb]"></a>on_char_disc_resp</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ble_ias_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = on_char_disc_resp
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ias_c_on_ble_evt
</UL>

<P><STRONG><a name="[c1]"></a>alert_level_char_add</STRONG> (Thumb, 136 bytes, Stack size 80 bytes, ble_lls.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = alert_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lls_init
</UL>

<P><STRONG><a name="[c2]"></a>tx_power_level_char_add</STRONG> (Thumb, 136 bytes, Stack size 80 bytes, ble_tps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = tx_power_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_tps_init
</UL>

<P><STRONG><a name="[c3]"></a>uuid_list_sized_encode</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_uuid_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
</UL>

<P><STRONG><a name="[c5]"></a>uuid_list_encode</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_sized_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[c6]"></a>adv_data_encode</STRONG> (Thumb, 362 bytes, Stack size 40 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_get
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_encode
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[c9]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_advdata.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[c7]"></a>name_encode</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = name_encode &rArr; sd_ble_gap_device_name_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[cb]"></a>conn_int_encode</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = conn_int_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[cc]"></a>manuf_specific_data_encode</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = manuf_specific_data_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[cd]"></a>service_data_encode</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, ble_advdata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = service_data_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[d9]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[d0]"></a>rtc1_stop</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_remove
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[d4]"></a>timer_list_insert</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
</UL>

<P><STRONG><a name="[d1]"></a>timer_timeouts_check</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_timeouts_check
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>

<P><STRONG><a name="[d3]"></a>list_insertions_handler</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[da]"></a>user_id_get</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[d2]"></a>timer_list_handler_sched</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[d5]"></a>elapsed_ticks_acquire</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = elapsed_ticks_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[d6]"></a>list_deletions_handler</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = list_deletions_handler &rArr; timer_list_remove &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[d7]"></a>expired_timers_handler</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = expired_timers_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[d8]"></a>compare_reg_update</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = compare_reg_update &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[db]"></a>user_op_alloc</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[dc]"></a>timer_list_remove</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = timer_list_remove &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
</UL>

<P><STRONG><a name="[dd]"></a>button_handler_execute</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = button_handler_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_delay_timeout_handler
</UL>

<P><STRONG><a name="[2e]"></a>detection_delay_timeout_handler</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = detection_delay_timeout_handler &rArr; button_handler_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_pins_state_get
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_handler_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>gpiote_event_handler</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gpiote_event_handler &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>connection_instance_find</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = connection_instance_find
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[e7]"></a>peer_instance_init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = peer_instance_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_status_bit_reset
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[e9]"></a>device_instance_find</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = device_instance_find &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[eb]"></a>connection_instance_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = connection_instance_init
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[33]"></a>storage_operation_dummy_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.text)
</UL>
<P><STRONG><a name="[63]"></a>gatts_context_store</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gatts_context_store &rArr; sd_ble_gatts_sys_attr_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_get
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_store
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>gatts_context_load</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gatts_context_load &rArr; pstorage_load &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_load
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>gatts_context_apply</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gatts_context_apply &rArr; sd_ble_gatts_sys_attr_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_apply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>dm_pstorage_cb_handler</STRONG> (Thumb, 326 bytes, Stack size 80 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = dm_pstorage_cb_handler &rArr; pstorage_block_identifier_get
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_handle_initialize
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_evt_notify
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_status_bit_reset
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>device_context_store</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = device_context_store &rArr; pstorage_block_identifier_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[e8]"></a>update_status_bit_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
</UL>

<P><STRONG><a name="[fa]"></a>device_instance_allocate</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = device_instance_allocate
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[f2]"></a>app_evt_notify</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
</UL>

<P><STRONG><a name="[62]"></a>no_service_context_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>gattc_context_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>gattsc_context_store</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gattsc_context_store &rArr; gatts_context_store &rArr; sd_ble_gatts_sys_attr_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>no_service_context_load</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>gattc_context_load</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>gattsc_context_load</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gattsc_context_load &rArr; gatts_context_load &rArr; pstorage_load &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_load
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[6a]"></a>no_service_context_apply</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>gattc_context_apply</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>gattsc_context_apply</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device_manager_peripheral.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gattsc_context_apply &rArr; gatts_context_apply &rArr; sd_ble_gatts_sys_attr_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_apply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>update_timeout_handler</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = update_timeout_handler &rArr; sd_ble_gap_disconnect &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_conn_param_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_conn_params.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>conn_params_negotiation</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ble_conn_params.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = conn_params_negotiation &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_conn_params_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[fe]"></a>is_conn_params_ok</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ble_conn_params.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>

<P><STRONG><a name="[129]"></a>whitelist_encode</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ble_gap_adv_start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = whitelist_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_req_enc
</UL>

<P><STRONG><a name="[12f]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_gap_conn_param_update.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update_req_enc
</UL>

<P><STRONG><a name="[139]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_gap_ppcp_set.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_set_req_enc
</UL>

<P><STRONG><a name="[146]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_gattc_write.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_write_req_enc
</UL>

<P><STRONG><a name="[151]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_gatts_hvx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_req_enc
</UL>

<P><STRONG><a name="[174]"></a>uint32_decode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ble_serialization.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_t_dec
</UL>

<P><STRONG><a name="[3e]"></a>uuid_encode_rsp_dec</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_mw_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = uuid_encode_rsp_dec &rArr; ble_uuid_encode_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_encode_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble.o(.text)
</UL>
<P><STRONG><a name="[3f]"></a>enable_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = enable_rsp_dec &rArr; ble_enable_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_enable_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble.o(.text)
</UL>
<P><STRONG><a name="[178]"></a>tx_buf_alloc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_mw_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tx_buf_alloc &rArr; ser_sd_transport_tx_alloc &rArr; ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_tx_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_uuid_encode
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_enable
</UL>

<P><STRONG><a name="[40]"></a>gap_adv_start_rsp_dec</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gap_adv_start_rsp_dec &rArr; ble_gap_adv_start_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[41]"></a>gap_device_name_get_rsp_dec</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = gap_device_name_get_rsp_dec &rArr; ble_gap_device_name_get_rsp_dec &rArr; len16data_dec &rArr; buf_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_get_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>gap_appearance_get_rsp_dec</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gap_appearance_get_rsp_dec &rArr; ble_gap_appearance_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_get_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>gap_device_name_set_rsp_dec</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gap_device_name_set_rsp_dec &rArr; ble_gap_device_name_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[44]"></a>gap_appearance_set_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gap_appearance_set_rsp_dec &rArr; ble_gap_appearance_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>gap_ppcp_set_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gap_ppcp_set_rsp_dec &rArr; ble_gap_ppcp_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>gap_adv_data_set_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gap_adv_data_set_rsp_dec &rArr; ble_gap_adv_data_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_data_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>gap_conn_param_update_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gap_conn_param_update_rsp_dec &rArr; ble_gap_conn_param_update_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>gap_disconnect_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gap_disconnect_rsp_dec &rArr; ble_gap_disconnect_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>gap_sec_info_reply_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gap_sec_info_reply_rsp_dec &rArr; ble_gap_sec_info_reply_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_info_reply_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>gap_sec_params_reply_rsp_dec</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gap_sec_params_reply_rsp_dec &rArr; ble_gap_sec_params_reply_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_reply_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>gap_ppcp_get_reply_rsp_dec</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gap_ppcp_get_reply_rsp_dec &rArr; ble_gap_ppcp_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_get_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[4c]"></a>gap_tx_power_set_rsp_dec</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gap_tx_power_set_rsp_dec &rArr; ble_gap_tx_power_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_tx_power_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[17c]"></a>tx_buf_alloc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_mw_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tx_buf_alloc &rArr; ser_sd_transport_tx_alloc &rArr; ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_tx_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_get
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_get
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_data_set
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_tx_power_set
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_set
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_set
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_start
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_get
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_conn_param_update
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_info_reply
</UL>

<P><STRONG><a name="[4d]"></a>gattc_primary_services_discover_rsp_dec</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_mw_ble_gattc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gattc_primary_services_discover_rsp_dec &rArr; ble_gattc_primary_services_discover_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_primary_services_discover_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gattc.o(.text)
</UL>
<P><STRONG><a name="[4e]"></a>gattc_characteristics_discover_rsp_dec</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_mw_ble_gattc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gattc_characteristics_discover_rsp_dec &rArr; ble_gattc_characteristics_discover_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_characteristics_discover_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gattc.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>gattc_write_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble_gattc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gattc_write_rsp_dec &rArr; ble_gattc_write_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_write_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gattc.o(.text)
</UL>
<P><STRONG><a name="[183]"></a>tx_buf_alloc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_mw_ble_gattc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tx_buf_alloc &rArr; ser_sd_transport_tx_alloc &rArr; ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_tx_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_write
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_primary_services_discover
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gattc_characteristics_discover
</UL>

<P><STRONG><a name="[50]"></a>gatts_sys_attr_set_rsp_dec</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gatts_sys_attr_set_rsp_dec &rArr; ble_gatts_sys_attr_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(.text)
</UL>
<P><STRONG><a name="[51]"></a>gatts_hvx_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = gatts_hvx_rsp_dec &rArr; ble_gatts_hvx_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(.text)
</UL>
<P><STRONG><a name="[52]"></a>gatts_service_add_rsp_dec</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gatts_service_add_rsp_dec &rArr; ble_gatts_service_add_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_add_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>gatts_characteristic_add_rsp_dec</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = gatts_characteristic_add_rsp_dec &rArr; ble_gatts_characteristic_add_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>gatts_descriptor_add_rsp_dec</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gatts_descriptor_add_rsp_dec &rArr; ble_gatts_descriptor_add_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>gatts_value_get_rsp_dec</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = gatts_value_get_rsp_dec &rArr; ble_gatts_value_get_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_get_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(.text)
</UL>
<P><STRONG><a name="[56]"></a>gatts_value_set_rsp_dec</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gatts_value_set_rsp_dec &rArr; ble_gatts_value_set_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(.text)
</UL>
<P><STRONG><a name="[57]"></a>gatts_sys_attr_get_rsp_dec</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gatts_sys_attr_get_rsp_dec &rArr; ble_gatts_sys_attr_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_get_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(.text)
</UL>
<P><STRONG><a name="[186]"></a>tx_buf_alloc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_mw_ble_gatts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tx_buf_alloc &rArr; ser_sd_transport_tx_alloc &rArr; ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_tx_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_get
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_set
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_hvx
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_descriptor_add
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_set
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_get
</UL>

<P><STRONG><a name="[18a]"></a>tx_buf_alloc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_mw_nrf_soc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tx_buf_alloc &rArr; ser_sd_transport_tx_alloc &rArr; ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_tx_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
</UL>

<P><STRONG><a name="[59]"></a>ser_softdevice_evt_handler</STRONG> (Thumb, 80 bytes, Stack size 96 bytes, ser_softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = ser_softdevice_evt_handler &rArr; ble_event_dec &rArr; ble_gatts_evt_rw_authorize_request_dec &rArr; ble_gatts_evt_rw_authorize_request_t_dec &rArr; ble_gatts_evt_write_t_dec &rArr; ble_gatts_attr_context_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_free
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_nrf_evt_pending
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_softdevice_handler.o(.text)
</UL>
<P><STRONG><a name="[58]"></a>ser_sd_rsp_wait</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ser_softdevice_handler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ser_sd_rsp_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_is_busy
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_wait_for_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_softdevice_handler.o(.text)
</UL>
<P><STRONG><a name="[5a]"></a>ser_sd_transport_hal_handler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ser_sd_transport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ser_sd_transport_hal_handler &rArr; ser_sd_transport_rx_packet_handler &rArr; ser_sd_transport_rx_free &rArr; ser_hal_transport_rx_pkt_free &rArr; ser_phy_rx_buf_set
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_power_system_off_get
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_power_system_off_enter
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_packet_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_sd_transport.o(.text)
</UL>
<P><STRONG><a name="[19e]"></a>ser_sd_transport_rx_packet_handler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ser_sd_transport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ser_sd_transport_rx_packet_handler &rArr; ser_sd_transport_rx_free &rArr; ser_hal_transport_rx_pkt_free &rArr; ser_phy_rx_buf_set
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_free
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_hal_handler
</UL>

<P><STRONG><a name="[5b]"></a>phy_events_handler</STRONG> (Thumb, 370 bytes, Stack size 48 bytes, ser_hal_transport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = phy_events_handler &rArr; ser_phy_rx_buf_set
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_rx_buf_set
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_hal_transport.o(.text)
</UL>
<P><STRONG><a name="[1ae]"></a>flash_page_erase</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ble_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
</UL>

<P><STRONG><a name="[1ab]"></a>flash_word_write</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ble_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_word_write &rArr; sd_app_evt_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_app_evt_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
</UL>

<P><STRONG><a name="[1af]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_SetPriority
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_nrf_evt_irq_enable
</UL>

<P><STRONG><a name="[1b0]"></a>is_word_aligned</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pstorage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
</UL>

<P><STRONG><a name="[1b1]"></a>app_notify</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, pstorage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
</UL>

<P><STRONG><a name="[1b4]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_enable_interrupts
</UL>

<P><STRONG><a name="[1b2]"></a>sense_level_toggle</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = sense_level_toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI1_IRQHandler
</UL>

<P><STRONG><a name="[1b5]"></a>pins_sense_disable</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, app_gpiote_fast_detect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pins_sense_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_user_register
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_user_disable
</UL>

<P><STRONG><a name="[1b6]"></a>frame_get</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = frame_get &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_current_packet_length
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_switch_state
</UL>

<P><STRONG><a name="[1b9]"></a>frame_send</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = frame_send &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_current_packet_length
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_switch_state
</UL>

<P><STRONG><a name="[1ba]"></a>ser_phy_switch_state</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ser_phy_switch_state &rArr; frame_send &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_get
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_send
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_raw_assert
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_send
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[5c]"></a>ser_phy_spi_master_event_handler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ser_phy_spi_master_event_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_phy_nrf51_spi_master.o(.text)
</UL>
<P><STRONG><a name="[1be]"></a>nrf_gpio_pin_read</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_spi_master_request
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_spi_master_ready
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_open
</UL>

<P><STRONG><a name="[1bb]"></a>spi_master_raw_assert</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_master_raw_assert
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_switch_state
</UL>

<P><STRONG><a name="[1b7]"></a>compute_current_packet_length</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_send
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_get
</UL>

<P><STRONG><a name="[1bc]"></a>header_send</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = header_send &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_switch_state
</UL>

<P><STRONG><a name="[1bd]"></a>header_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ser_phy_nrf51_spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = header_get &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_switch_state
</UL>

<P><STRONG><a name="[1c3]"></a>spi_master_signal_evt</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_master_signal_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv_irq
</UL>

<P><STRONG><a name="[1c4]"></a>spi_master_buffer_release</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_master_buffer_release
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv_irq
</UL>

<P><STRONG><a name="[1c7]"></a>spi_master_init_hw_instance</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
</UL>

<P><STRONG><a name="[1c8]"></a>spi_master_buffer_init</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>

<P><STRONG><a name="[1c6]"></a>spi_master_send_recv_irq</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spi_master_send_recv_irq &rArr; spi_master_signal_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_buffer_release
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_signal_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_TWI0_IRQHandler
</UL>

<P><STRONG><a name="[1c5]"></a>spi_master_get_instance</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, spi_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_TWI0_IRQHandler
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_evt_handler_reg
</UL>

<P><STRONG><a name="[1cc]"></a>spi_master_send_initial_bytes</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, spi_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_master_send_initial_bytes
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>

<P><STRONG><a name="[1cd]"></a>is_manual_peripheral_setup_needed</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_nrf51.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
